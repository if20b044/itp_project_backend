//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GoAndSee_API.AD {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActiveDirectoryLayerSoap", Namespace="http://webservice.aua.com/ActiveDirectoryLayer")]
    public partial class ActiveDirectoryLayer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchVolumesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchComputersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOrganizationalUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserWithDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVolumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrganizationalUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyVolumeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOrganizationalUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListUserGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserInGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserInSubGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationGroupHierarchyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ActiveDirectoryLayer() {
            this.Url = global::GoAndSee_API.Properties.Settings.Default.GoAndSee_API_AD_ActiveDirectoryLayer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event SearchUsersCompletedEventHandler SearchUsersCompleted;
        
        /// <remarks/>
        public event SearchUsersExCompletedEventHandler SearchUsersExCompleted;
        
        /// <remarks/>
        public event SearchGroupsCompletedEventHandler SearchGroupsCompleted;
        
        /// <remarks/>
        public event SearchVolumesCompletedEventHandler SearchVolumesCompleted;
        
        /// <remarks/>
        public event SearchComputersCompletedEventHandler SearchComputersCompleted;
        
        /// <remarks/>
        public event SearchOrganizationalUnitsCompletedEventHandler SearchOrganizationalUnitsCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event CreateUserWithDetailsCompletedEventHandler CreateUserWithDetailsCompleted;
        
        /// <remarks/>
        public event CreateGroupCompletedEventHandler CreateGroupCompleted;
        
        /// <remarks/>
        public event CreateComputerCompletedEventHandler CreateComputerCompleted;
        
        /// <remarks/>
        public event CreateVolumeCompletedEventHandler CreateVolumeCompleted;
        
        /// <remarks/>
        public event CreateOrganizationalUnitCompletedEventHandler CreateOrganizationalUnitCompleted;
        
        /// <remarks/>
        public event ModifyUserCompletedEventHandler ModifyUserCompleted;
        
        /// <remarks/>
        public event ModifyGroupCompletedEventHandler ModifyGroupCompleted;
        
        /// <remarks/>
        public event ModifyComputerCompletedEventHandler ModifyComputerCompleted;
        
        /// <remarks/>
        public event ModifyVolumeCompletedEventHandler ModifyVolumeCompleted;
        
        /// <remarks/>
        public event ModifyOrganizationalUnitCompletedEventHandler ModifyOrganizationalUnitCompleted;
        
        /// <remarks/>
        public event RenameObjectCompletedEventHandler RenameObjectCompleted;
        
        /// <remarks/>
        public event DeleteObjectCompletedEventHandler DeleteObjectCompleted;
        
        /// <remarks/>
        public event MoveObjectCompletedEventHandler MoveObjectCompleted;
        
        /// <remarks/>
        public event SetUserPasswordCompletedEventHandler SetUserPasswordCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event ListUserGroupsCompletedEventHandler ListUserGroupsCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event AddUserToGroupCompletedEventHandler AddUserToGroupCompleted;
        
        /// <remarks/>
        public event RemoveUserFromGroupCompletedEventHandler RemoveUserFromGroupCompleted;
        
        /// <remarks/>
        public event IsUserInGroupCompletedEventHandler IsUserInGroupCompleted;
        
        /// <remarks/>
        public event IsUserInSubGroupCompletedEventHandler IsUserInSubGroupCompleted;
        
        /// <remarks/>
        public event GetApplicationGroupHierarchyCompletedEventHandler GetApplicationGroupHierarchyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/HelloWorld", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/Search", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Search(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            object[] results = this.Invoke("Search", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            this.SearchAsync(sDomain, sFilter, sSearchScope, sOULevels, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SearchUsers", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchUsers(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            object[] results = this.Invoke("SearchUsers", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            this.SearchUsersAsync(sDomain, sFilter, sSearchScope, sOULevels, null);
        }
        
        /// <remarks/>
        public void SearchUsersAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, object userState) {
            if ((this.SearchUsersOperationCompleted == null)) {
                this.SearchUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersOperationCompleted);
            }
            this.InvokeAsync("SearchUsers", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels}, this.SearchUsersOperationCompleted, userState);
        }
        
        private void OnSearchUsersOperationCompleted(object arg) {
            if ((this.SearchUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersCompleted(this, new SearchUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SearchUsersEx", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchUsersEx(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, string[] sProperties) {
            object[] results = this.Invoke("SearchUsersEx", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels,
                        sProperties});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersExAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, string[] sProperties) {
            this.SearchUsersExAsync(sDomain, sFilter, sSearchScope, sOULevels, sProperties, null);
        }
        
        /// <remarks/>
        public void SearchUsersExAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, string[] sProperties, object userState) {
            if ((this.SearchUsersExOperationCompleted == null)) {
                this.SearchUsersExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersExOperationCompleted);
            }
            this.InvokeAsync("SearchUsersEx", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels,
                        sProperties}, this.SearchUsersExOperationCompleted, userState);
        }
        
        private void OnSearchUsersExOperationCompleted(object arg) {
            if ((this.SearchUsersExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersExCompleted(this, new SearchUsersExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SearchGroups", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchGroups(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            object[] results = this.Invoke("SearchGroups", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchGroupsAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            this.SearchGroupsAsync(sDomain, sFilter, sSearchScope, sOULevels, null);
        }
        
        /// <remarks/>
        public void SearchGroupsAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, object userState) {
            if ((this.SearchGroupsOperationCompleted == null)) {
                this.SearchGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchGroupsOperationCompleted);
            }
            this.InvokeAsync("SearchGroups", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels}, this.SearchGroupsOperationCompleted, userState);
        }
        
        private void OnSearchGroupsOperationCompleted(object arg) {
            if ((this.SearchGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchGroupsCompleted(this, new SearchGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SearchVolumes", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchVolumes(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            object[] results = this.Invoke("SearchVolumes", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchVolumesAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            this.SearchVolumesAsync(sDomain, sFilter, sSearchScope, sOULevels, null);
        }
        
        /// <remarks/>
        public void SearchVolumesAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, object userState) {
            if ((this.SearchVolumesOperationCompleted == null)) {
                this.SearchVolumesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchVolumesOperationCompleted);
            }
            this.InvokeAsync("SearchVolumes", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels}, this.SearchVolumesOperationCompleted, userState);
        }
        
        private void OnSearchVolumesOperationCompleted(object arg) {
            if ((this.SearchVolumesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchVolumesCompleted(this, new SearchVolumesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SearchComputers", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchComputers(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            object[] results = this.Invoke("SearchComputers", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchComputersAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            this.SearchComputersAsync(sDomain, sFilter, sSearchScope, sOULevels, null);
        }
        
        /// <remarks/>
        public void SearchComputersAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, object userState) {
            if ((this.SearchComputersOperationCompleted == null)) {
                this.SearchComputersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchComputersOperationCompleted);
            }
            this.InvokeAsync("SearchComputers", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels}, this.SearchComputersOperationCompleted, userState);
        }
        
        private void OnSearchComputersOperationCompleted(object arg) {
            if ((this.SearchComputersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchComputersCompleted(this, new SearchComputersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SearchOrganizationalUnits", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchOrganizationalUnits(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            object[] results = this.Invoke("SearchOrganizationalUnits", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchOrganizationalUnitsAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels) {
            this.SearchOrganizationalUnitsAsync(sDomain, sFilter, sSearchScope, sOULevels, null);
        }
        
        /// <remarks/>
        public void SearchOrganizationalUnitsAsync(string sDomain, string sFilter, string sSearchScope, string[] sOULevels, object userState) {
            if ((this.SearchOrganizationalUnitsOperationCompleted == null)) {
                this.SearchOrganizationalUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOrganizationalUnitsOperationCompleted);
            }
            this.InvokeAsync("SearchOrganizationalUnits", new object[] {
                        sDomain,
                        sFilter,
                        sSearchScope,
                        sOULevels}, this.SearchOrganizationalUnitsOperationCompleted, userState);
        }
        
        private void OnSearchOrganizationalUnitsOperationCompleted(object arg) {
            if ((this.SearchOrganizationalUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchOrganizationalUnitsCompleted(this, new SearchOrganizationalUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/CreateUser", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateUser(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewUser) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sOULevels,
                        bUserAccountControl,
                        dsNewUser});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewUser) {
            this.CreateUserAsync(sDomain, sCommonName, sSAMAccountName, sOULevels, bUserAccountControl, dsNewUser, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewUser, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sOULevels,
                        bUserAccountControl,
                        dsNewUser}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/CreateUserWithDetails", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateUserWithDetails(string sDomain, string sCommonName, string sSAMAccountName, string sMail, long sAccountExpires, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewUser) {
            object[] results = this.Invoke("CreateUserWithDetails", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sMail,
                        sAccountExpires,
                        sOULevels,
                        bUserAccountControl,
                        dsNewUser});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserWithDetailsAsync(string sDomain, string sCommonName, string sSAMAccountName, string sMail, long sAccountExpires, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewUser) {
            this.CreateUserWithDetailsAsync(sDomain, sCommonName, sSAMAccountName, sMail, sAccountExpires, sOULevels, bUserAccountControl, dsNewUser, null);
        }
        
        /// <remarks/>
        public void CreateUserWithDetailsAsync(string sDomain, string sCommonName, string sSAMAccountName, string sMail, long sAccountExpires, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewUser, object userState) {
            if ((this.CreateUserWithDetailsOperationCompleted == null)) {
                this.CreateUserWithDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserWithDetailsOperationCompleted);
            }
            this.InvokeAsync("CreateUserWithDetails", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sMail,
                        sAccountExpires,
                        sOULevels,
                        bUserAccountControl,
                        dsNewUser}, this.CreateUserWithDetailsOperationCompleted, userState);
        }
        
        private void OnCreateUserWithDetailsOperationCompleted(object arg) {
            if ((this.CreateUserWithDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserWithDetailsCompleted(this, new CreateUserWithDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/CreateGroup", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateGroup(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bGroupType, System.Data.DataSet dsNewGroup) {
            object[] results = this.Invoke("CreateGroup", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sOULevels,
                        bGroupType,
                        dsNewGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGroupAsync(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bGroupType, System.Data.DataSet dsNewGroup) {
            this.CreateGroupAsync(sDomain, sCommonName, sSAMAccountName, sOULevels, bGroupType, dsNewGroup, null);
        }
        
        /// <remarks/>
        public void CreateGroupAsync(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bGroupType, System.Data.DataSet dsNewGroup, object userState) {
            if ((this.CreateGroupOperationCompleted == null)) {
                this.CreateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupOperationCompleted);
            }
            this.InvokeAsync("CreateGroup", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sOULevels,
                        bGroupType,
                        dsNewGroup}, this.CreateGroupOperationCompleted, userState);
        }
        
        private void OnCreateGroupOperationCompleted(object arg) {
            if ((this.CreateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGroupCompleted(this, new CreateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/CreateComputer", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateComputer(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewComputer) {
            object[] results = this.Invoke("CreateComputer", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sOULevels,
                        bUserAccountControl,
                        dsNewComputer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateComputerAsync(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewComputer) {
            this.CreateComputerAsync(sDomain, sCommonName, sSAMAccountName, sOULevels, bUserAccountControl, dsNewComputer, null);
        }
        
        /// <remarks/>
        public void CreateComputerAsync(string sDomain, string sCommonName, string sSAMAccountName, string[] sOULevels, bool[] bUserAccountControl, System.Data.DataSet dsNewComputer, object userState) {
            if ((this.CreateComputerOperationCompleted == null)) {
                this.CreateComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateComputerOperationCompleted);
            }
            this.InvokeAsync("CreateComputer", new object[] {
                        sDomain,
                        sCommonName,
                        sSAMAccountName,
                        sOULevels,
                        bUserAccountControl,
                        dsNewComputer}, this.CreateComputerOperationCompleted, userState);
        }
        
        private void OnCreateComputerOperationCompleted(object arg) {
            if ((this.CreateComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateComputerCompleted(this, new CreateComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/CreateVolume", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateVolume(string sDomain, string sCommonName, string[] sOULevels, string sVolume, System.Data.DataSet dsNewVolume) {
            object[] results = this.Invoke("CreateVolume", new object[] {
                        sDomain,
                        sCommonName,
                        sOULevels,
                        sVolume,
                        dsNewVolume});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVolumeAsync(string sDomain, string sCommonName, string[] sOULevels, string sVolume, System.Data.DataSet dsNewVolume) {
            this.CreateVolumeAsync(sDomain, sCommonName, sOULevels, sVolume, dsNewVolume, null);
        }
        
        /// <remarks/>
        public void CreateVolumeAsync(string sDomain, string sCommonName, string[] sOULevels, string sVolume, System.Data.DataSet dsNewVolume, object userState) {
            if ((this.CreateVolumeOperationCompleted == null)) {
                this.CreateVolumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVolumeOperationCompleted);
            }
            this.InvokeAsync("CreateVolume", new object[] {
                        sDomain,
                        sCommonName,
                        sOULevels,
                        sVolume,
                        dsNewVolume}, this.CreateVolumeOperationCompleted, userState);
        }
        
        private void OnCreateVolumeOperationCompleted(object arg) {
            if ((this.CreateVolumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVolumeCompleted(this, new CreateVolumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/CreateOrganizationalUnit", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateOrganizationalUnit(string sDomain, string sOUName, string[] sOULevels, System.Data.DataSet dsNewOrganizationalUnit) {
            object[] results = this.Invoke("CreateOrganizationalUnit", new object[] {
                        sDomain,
                        sOUName,
                        sOULevels,
                        dsNewOrganizationalUnit});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrganizationalUnitAsync(string sDomain, string sOUName, string[] sOULevels, System.Data.DataSet dsNewOrganizationalUnit) {
            this.CreateOrganizationalUnitAsync(sDomain, sOUName, sOULevels, dsNewOrganizationalUnit, null);
        }
        
        /// <remarks/>
        public void CreateOrganizationalUnitAsync(string sDomain, string sOUName, string[] sOULevels, System.Data.DataSet dsNewOrganizationalUnit, object userState) {
            if ((this.CreateOrganizationalUnitOperationCompleted == null)) {
                this.CreateOrganizationalUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrganizationalUnitOperationCompleted);
            }
            this.InvokeAsync("CreateOrganizationalUnit", new object[] {
                        sDomain,
                        sOUName,
                        sOULevels,
                        dsNewOrganizationalUnit}, this.CreateOrganizationalUnitOperationCompleted, userState);
        }
        
        private void OnCreateOrganizationalUnitOperationCompleted(object arg) {
            if ((this.CreateOrganizationalUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrganizationalUnitCompleted(this, new CreateOrganizationalUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ModifyUser", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUser(string sDomain, bool[] bUserAccountControl, System.Data.DataSet dsUser) {
            object[] results = this.Invoke("ModifyUser", new object[] {
                        sDomain,
                        bUserAccountControl,
                        dsUser});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserAsync(string sDomain, bool[] bUserAccountControl, System.Data.DataSet dsUser) {
            this.ModifyUserAsync(sDomain, bUserAccountControl, dsUser, null);
        }
        
        /// <remarks/>
        public void ModifyUserAsync(string sDomain, bool[] bUserAccountControl, System.Data.DataSet dsUser, object userState) {
            if ((this.ModifyUserOperationCompleted == null)) {
                this.ModifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserOperationCompleted);
            }
            this.InvokeAsync("ModifyUser", new object[] {
                        sDomain,
                        bUserAccountControl,
                        dsUser}, this.ModifyUserOperationCompleted, userState);
        }
        
        private void OnModifyUserOperationCompleted(object arg) {
            if ((this.ModifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserCompleted(this, new ModifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ModifyGroup", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyGroup(string sDomain, bool[] bGroupType, System.Data.DataSet dsGroup) {
            object[] results = this.Invoke("ModifyGroup", new object[] {
                        sDomain,
                        bGroupType,
                        dsGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyGroupAsync(string sDomain, bool[] bGroupType, System.Data.DataSet dsGroup) {
            this.ModifyGroupAsync(sDomain, bGroupType, dsGroup, null);
        }
        
        /// <remarks/>
        public void ModifyGroupAsync(string sDomain, bool[] bGroupType, System.Data.DataSet dsGroup, object userState) {
            if ((this.ModifyGroupOperationCompleted == null)) {
                this.ModifyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyGroupOperationCompleted);
            }
            this.InvokeAsync("ModifyGroup", new object[] {
                        sDomain,
                        bGroupType,
                        dsGroup}, this.ModifyGroupOperationCompleted, userState);
        }
        
        private void OnModifyGroupOperationCompleted(object arg) {
            if ((this.ModifyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyGroupCompleted(this, new ModifyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ModifyComputer", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyComputer(string sDomain, bool[] bUserAccountControl, System.Data.DataSet dsComputer) {
            object[] results = this.Invoke("ModifyComputer", new object[] {
                        sDomain,
                        bUserAccountControl,
                        dsComputer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyComputerAsync(string sDomain, bool[] bUserAccountControl, System.Data.DataSet dsComputer) {
            this.ModifyComputerAsync(sDomain, bUserAccountControl, dsComputer, null);
        }
        
        /// <remarks/>
        public void ModifyComputerAsync(string sDomain, bool[] bUserAccountControl, System.Data.DataSet dsComputer, object userState) {
            if ((this.ModifyComputerOperationCompleted == null)) {
                this.ModifyComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyComputerOperationCompleted);
            }
            this.InvokeAsync("ModifyComputer", new object[] {
                        sDomain,
                        bUserAccountControl,
                        dsComputer}, this.ModifyComputerOperationCompleted, userState);
        }
        
        private void OnModifyComputerOperationCompleted(object arg) {
            if ((this.ModifyComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyComputerCompleted(this, new ModifyComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ModifyVolume", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyVolume(string sDomain, System.Data.DataSet dsVolume) {
            object[] results = this.Invoke("ModifyVolume", new object[] {
                        sDomain,
                        dsVolume});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyVolumeAsync(string sDomain, System.Data.DataSet dsVolume) {
            this.ModifyVolumeAsync(sDomain, dsVolume, null);
        }
        
        /// <remarks/>
        public void ModifyVolumeAsync(string sDomain, System.Data.DataSet dsVolume, object userState) {
            if ((this.ModifyVolumeOperationCompleted == null)) {
                this.ModifyVolumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyVolumeOperationCompleted);
            }
            this.InvokeAsync("ModifyVolume", new object[] {
                        sDomain,
                        dsVolume}, this.ModifyVolumeOperationCompleted, userState);
        }
        
        private void OnModifyVolumeOperationCompleted(object arg) {
            if ((this.ModifyVolumeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyVolumeCompleted(this, new ModifyVolumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ModifyOrganizationalUnit", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyOrganizationalUnit(string sDomain, System.Data.DataSet dsOU) {
            object[] results = this.Invoke("ModifyOrganizationalUnit", new object[] {
                        sDomain,
                        dsOU});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOrganizationalUnitAsync(string sDomain, System.Data.DataSet dsOU) {
            this.ModifyOrganizationalUnitAsync(sDomain, dsOU, null);
        }
        
        /// <remarks/>
        public void ModifyOrganizationalUnitAsync(string sDomain, System.Data.DataSet dsOU, object userState) {
            if ((this.ModifyOrganizationalUnitOperationCompleted == null)) {
                this.ModifyOrganizationalUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOrganizationalUnitOperationCompleted);
            }
            this.InvokeAsync("ModifyOrganizationalUnit", new object[] {
                        sDomain,
                        dsOU}, this.ModifyOrganizationalUnitOperationCompleted, userState);
        }
        
        private void OnModifyOrganizationalUnitOperationCompleted(object arg) {
            if ((this.ModifyOrganizationalUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOrganizationalUnitCompleted(this, new ModifyOrganizationalUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/RenameObject", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RenameObject(string sDomain, string sObjectGuid, string sNewName) {
            object[] results = this.Invoke("RenameObject", new object[] {
                        sDomain,
                        sObjectGuid,
                        sNewName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RenameObjectAsync(string sDomain, string sObjectGuid, string sNewName) {
            this.RenameObjectAsync(sDomain, sObjectGuid, sNewName, null);
        }
        
        /// <remarks/>
        public void RenameObjectAsync(string sDomain, string sObjectGuid, string sNewName, object userState) {
            if ((this.RenameObjectOperationCompleted == null)) {
                this.RenameObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameObjectOperationCompleted);
            }
            this.InvokeAsync("RenameObject", new object[] {
                        sDomain,
                        sObjectGuid,
                        sNewName}, this.RenameObjectOperationCompleted, userState);
        }
        
        private void OnRenameObjectOperationCompleted(object arg) {
            if ((this.RenameObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameObjectCompleted(this, new RenameObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/DeleteObject", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteObject(string sDomain, string sObjectGuid) {
            object[] results = this.Invoke("DeleteObject", new object[] {
                        sDomain,
                        sObjectGuid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteObjectAsync(string sDomain, string sObjectGuid) {
            this.DeleteObjectAsync(sDomain, sObjectGuid, null);
        }
        
        /// <remarks/>
        public void DeleteObjectAsync(string sDomain, string sObjectGuid, object userState) {
            if ((this.DeleteObjectOperationCompleted == null)) {
                this.DeleteObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteObjectOperationCompleted);
            }
            this.InvokeAsync("DeleteObject", new object[] {
                        sDomain,
                        sObjectGuid}, this.DeleteObjectOperationCompleted, userState);
        }
        
        private void OnDeleteObjectOperationCompleted(object arg) {
            if ((this.DeleteObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteObjectCompleted(this, new DeleteObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/MoveObject", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveObject(string sDomain, string[] sOULevelsObject, string sCommonNameObject, string[] sOULevelsTarget) {
            object[] results = this.Invoke("MoveObject", new object[] {
                        sDomain,
                        sOULevelsObject,
                        sCommonNameObject,
                        sOULevelsTarget});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveObjectAsync(string sDomain, string[] sOULevelsObject, string sCommonNameObject, string[] sOULevelsTarget) {
            this.MoveObjectAsync(sDomain, sOULevelsObject, sCommonNameObject, sOULevelsTarget, null);
        }
        
        /// <remarks/>
        public void MoveObjectAsync(string sDomain, string[] sOULevelsObject, string sCommonNameObject, string[] sOULevelsTarget, object userState) {
            if ((this.MoveObjectOperationCompleted == null)) {
                this.MoveObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveObjectOperationCompleted);
            }
            this.InvokeAsync("MoveObject", new object[] {
                        sDomain,
                        sOULevelsObject,
                        sCommonNameObject,
                        sOULevelsTarget}, this.MoveObjectOperationCompleted, userState);
        }
        
        private void OnMoveObjectOperationCompleted(object arg) {
            if ((this.MoveObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveObjectCompleted(this, new MoveObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/SetUserPassword", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUserPassword(string sDomain, string sUserGuid, string sNewPassword) {
            object[] results = this.Invoke("SetUserPassword", new object[] {
                        sDomain,
                        sUserGuid,
                        sNewPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserPasswordAsync(string sDomain, string sUserGuid, string sNewPassword) {
            this.SetUserPasswordAsync(sDomain, sUserGuid, sNewPassword, null);
        }
        
        /// <remarks/>
        public void SetUserPasswordAsync(string sDomain, string sUserGuid, string sNewPassword, object userState) {
            if ((this.SetUserPasswordOperationCompleted == null)) {
                this.SetUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("SetUserPassword", new object[] {
                        sDomain,
                        sUserGuid,
                        sNewPassword}, this.SetUserPasswordOperationCompleted, userState);
        }
        
        private void OnSetUserPasswordOperationCompleted(object arg) {
            if ((this.SetUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserPasswordCompleted(this, new SetUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ValidateUser", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateUser(string sDomain, string sUserName, string sPassword) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        sDomain,
                        sUserName,
                        sPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string sDomain, string sUserName, string sPassword) {
            this.ValidateUserAsync(sDomain, sUserName, sPassword, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string sDomain, string sUserName, string sPassword, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        sDomain,
                        sUserName,
                        sPassword}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ListUserGroups", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ListUserGroups(string sDomain, string sUserName, string sGroupName) {
            object[] results = this.Invoke("ListUserGroups", new object[] {
                        sDomain,
                        sUserName,
                        sGroupName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ListUserGroupsAsync(string sDomain, string sUserName, string sGroupName) {
            this.ListUserGroupsAsync(sDomain, sUserName, sGroupName, null);
        }
        
        /// <remarks/>
        public void ListUserGroupsAsync(string sDomain, string sUserName, string sGroupName, object userState) {
            if ((this.ListUserGroupsOperationCompleted == null)) {
                this.ListUserGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListUserGroupsOperationCompleted);
            }
            this.InvokeAsync("ListUserGroups", new object[] {
                        sDomain,
                        sUserName,
                        sGroupName}, this.ListUserGroupsOperationCompleted, userState);
        }
        
        private void OnListUserGroupsOperationCompleted(object arg) {
            if ((this.ListUserGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListUserGroupsCompleted(this, new ListUserGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/ChangeUserPassword", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeUserPassword(string sDomain, string[] sOULevels, string sCommonName, string sOldPassword, string sNewPassword) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        sDomain,
                        sOULevels,
                        sCommonName,
                        sOldPassword,
                        sNewPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string sDomain, string[] sOULevels, string sCommonName, string sOldPassword, string sNewPassword) {
            this.ChangeUserPasswordAsync(sDomain, sOULevels, sCommonName, sOldPassword, sNewPassword, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(string sDomain, string[] sOULevels, string sCommonName, string sOldPassword, string sNewPassword, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        sDomain,
                        sOULevels,
                        sCommonName,
                        sOldPassword,
                        sNewPassword}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/AddUserToGroup", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserToGroup(string sDomain, string sUserGuid, string sGroupGuid) {
            object[] results = this.Invoke("AddUserToGroup", new object[] {
                        sDomain,
                        sUserGuid,
                        sGroupGuid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(string sDomain, string sUserGuid, string sGroupGuid) {
            this.AddUserToGroupAsync(sDomain, sUserGuid, sGroupGuid, null);
        }
        
        /// <remarks/>
        public void AddUserToGroupAsync(string sDomain, string sUserGuid, string sGroupGuid, object userState) {
            if ((this.AddUserToGroupOperationCompleted == null)) {
                this.AddUserToGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToGroupOperationCompleted);
            }
            this.InvokeAsync("AddUserToGroup", new object[] {
                        sDomain,
                        sUserGuid,
                        sGroupGuid}, this.AddUserToGroupOperationCompleted, userState);
        }
        
        private void OnAddUserToGroupOperationCompleted(object arg) {
            if ((this.AddUserToGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToGroupCompleted(this, new AddUserToGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/RemoveUserFromGroup", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveUserFromGroup(string sDomain, string sUserGuid, string sGroupGuid) {
            object[] results = this.Invoke("RemoveUserFromGroup", new object[] {
                        sDomain,
                        sUserGuid,
                        sGroupGuid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(string sDomain, string sUserGuid, string sGroupGuid) {
            this.RemoveUserFromGroupAsync(sDomain, sUserGuid, sGroupGuid, null);
        }
        
        /// <remarks/>
        public void RemoveUserFromGroupAsync(string sDomain, string sUserGuid, string sGroupGuid, object userState) {
            if ((this.RemoveUserFromGroupOperationCompleted == null)) {
                this.RemoveUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveUserFromGroup", new object[] {
                        sDomain,
                        sUserGuid,
                        sGroupGuid}, this.RemoveUserFromGroupOperationCompleted, userState);
        }
        
        private void OnRemoveUserFromGroupOperationCompleted(object arg) {
            if ((this.RemoveUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserFromGroupCompleted(this, new RemoveUserFromGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/IsUserInGroup", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserInGroup(string sDomain, string sUserName, string sGroupName) {
            object[] results = this.Invoke("IsUserInGroup", new object[] {
                        sDomain,
                        sUserName,
                        sGroupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserInGroupAsync(string sDomain, string sUserName, string sGroupName) {
            this.IsUserInGroupAsync(sDomain, sUserName, sGroupName, null);
        }
        
        /// <remarks/>
        public void IsUserInGroupAsync(string sDomain, string sUserName, string sGroupName, object userState) {
            if ((this.IsUserInGroupOperationCompleted == null)) {
                this.IsUserInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserInGroupOperationCompleted);
            }
            this.InvokeAsync("IsUserInGroup", new object[] {
                        sDomain,
                        sUserName,
                        sGroupName}, this.IsUserInGroupOperationCompleted, userState);
        }
        
        private void OnIsUserInGroupOperationCompleted(object arg) {
            if ((this.IsUserInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserInGroupCompleted(this, new IsUserInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/IsUserInSubGroup", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserInSubGroup(string sDomain, string sUserName, string sGroupName) {
            object[] results = this.Invoke("IsUserInSubGroup", new object[] {
                        sDomain,
                        sUserName,
                        sGroupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserInSubGroupAsync(string sDomain, string sUserName, string sGroupName) {
            this.IsUserInSubGroupAsync(sDomain, sUserName, sGroupName, null);
        }
        
        /// <remarks/>
        public void IsUserInSubGroupAsync(string sDomain, string sUserName, string sGroupName, object userState) {
            if ((this.IsUserInSubGroupOperationCompleted == null)) {
                this.IsUserInSubGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserInSubGroupOperationCompleted);
            }
            this.InvokeAsync("IsUserInSubGroup", new object[] {
                        sDomain,
                        sUserName,
                        sGroupName}, this.IsUserInSubGroupOperationCompleted, userState);
        }
        
        private void OnIsUserInSubGroupOperationCompleted(object arg) {
            if ((this.IsUserInSubGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserInSubGroupCompleted(this, new IsUserInSubGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://webservice.aua.com/ActiveDirectoryLayer/GetApplicationGroupHierarchy", RequestNamespace="http://webservice.aua.com/ActiveDirectoryLayer", ResponseNamespace="http://webservice.aua.com/ActiveDirectoryLayer", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetApplicationGroupHierarchy(string sDomain, string sUserName, string sApplicationName) {
            object[] results = this.Invoke("GetApplicationGroupHierarchy", new object[] {
                        sDomain,
                        sUserName,
                        sApplicationName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationGroupHierarchyAsync(string sDomain, string sUserName, string sApplicationName) {
            this.GetApplicationGroupHierarchyAsync(sDomain, sUserName, sApplicationName, null);
        }
        
        /// <remarks/>
        public void GetApplicationGroupHierarchyAsync(string sDomain, string sUserName, string sApplicationName, object userState) {
            if ((this.GetApplicationGroupHierarchyOperationCompleted == null)) {
                this.GetApplicationGroupHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationGroupHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetApplicationGroupHierarchy", new object[] {
                        sDomain,
                        sUserName,
                        sApplicationName}, this.GetApplicationGroupHierarchyOperationCompleted, userState);
        }
        
        private void OnGetApplicationGroupHierarchyOperationCompleted(object arg) {
            if ((this.GetApplicationGroupHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationGroupHierarchyCompleted(this, new GetApplicationGroupHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchUsersCompletedEventHandler(object sender, SearchUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchUsersExCompletedEventHandler(object sender, SearchUsersExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchGroupsCompletedEventHandler(object sender, SearchGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchVolumesCompletedEventHandler(object sender, SearchVolumesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchVolumesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchVolumesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchComputersCompletedEventHandler(object sender, SearchComputersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchComputersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchComputersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchOrganizationalUnitsCompletedEventHandler(object sender, SearchOrganizationalUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchOrganizationalUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchOrganizationalUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateUserWithDetailsCompletedEventHandler(object sender, CreateUserWithDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserWithDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserWithDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateGroupCompletedEventHandler(object sender, CreateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateComputerCompletedEventHandler(object sender, CreateComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateVolumeCompletedEventHandler(object sender, CreateVolumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVolumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVolumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateOrganizationalUnitCompletedEventHandler(object sender, CreateOrganizationalUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrganizationalUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrganizationalUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyUserCompletedEventHandler(object sender, ModifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyGroupCompletedEventHandler(object sender, ModifyGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyComputerCompletedEventHandler(object sender, ModifyComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyVolumeCompletedEventHandler(object sender, ModifyVolumeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyVolumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyVolumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ModifyOrganizationalUnitCompletedEventHandler(object sender, ModifyOrganizationalUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOrganizationalUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOrganizationalUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RenameObjectCompletedEventHandler(object sender, RenameObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteObjectCompletedEventHandler(object sender, DeleteObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MoveObjectCompletedEventHandler(object sender, MoveObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetUserPasswordCompletedEventHandler(object sender, SetUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ListUserGroupsCompletedEventHandler(object sender, ListUserGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListUserGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListUserGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddUserToGroupCompletedEventHandler(object sender, AddUserToGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RemoveUserFromGroupCompletedEventHandler(object sender, RemoveUserFromGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserFromGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserFromGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsUserInGroupCompletedEventHandler(object sender, IsUserInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsUserInSubGroupCompletedEventHandler(object sender, IsUserInSubGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserInSubGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserInSubGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetApplicationGroupHierarchyCompletedEventHandler(object sender, GetApplicationGroupHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationGroupHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationGroupHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591